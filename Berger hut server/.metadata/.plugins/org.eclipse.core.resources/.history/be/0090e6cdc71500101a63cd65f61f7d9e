package com.burgerhut.controller;

import com.burgerhut.entity.Cart;
import com.burgerhut.entity.User;
import com.burgerhut.exception.ResourceNotFoundException;
import com.burgerhut.repository.UserRepository;
import com.burgerhut.service.CartService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/cart")
@RequiredArgsConstructor
public class CartController {

    private final CartService cartService;
    private final UserRepository userRepository;

    // ✅ Get cart by user ID
    @GetMapping("/user/{userId}")
    public ResponseEntity<?> getCartByUser(@PathVariable Long userId) {
        User user = userRepository.findById(userId)
                .orElseThrow(() -> new ResourceNotFoundException("User not found with ID: " + userId));

        Cart cart = cartService.getCartByUser(user);
        return ResponseEntity.ok(cart);
    }

    // ✅ Save or update cart
    @PostMapping
    public ResponseEntity<Cart> saveCart(@RequestBody Cart cart) {
        Cart savedCart = cartService.saveCart(cart);
        return ResponseEntity.ok(savedCart);
    }

    // ✅ Clear cart by cart ID
    @DeleteMapping("/{cartId}")
    public ResponseEntity<?> clearCart(@PathVariable Long cartId) {
        cartService.clearCart(cartId);
        return ResponseEntity.ok("Cart cleared with ID: " + cartId);
    }
}
