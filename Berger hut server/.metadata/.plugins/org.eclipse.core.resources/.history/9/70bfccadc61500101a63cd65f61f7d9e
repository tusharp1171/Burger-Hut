package com.burgerhut.controller;

import com.burgerhut.entity.MenuItem;
import com.burgerhut.entity.Review;
import com.burgerhut.entity.User;
import com.burgerhut.repository.MenuItemRepository;
import com.burgerhut.repository.UserRepository;
import com.burgerhut.service.ReviewService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/reviews")
@RequiredArgsConstructor
public class ReviewController {

    private final ReviewService reviewService;
    private final UserRepository userRepository;
    private final MenuItemRepository menuItemRepository;

    // ✅ Add review
    @PostMapping
    public ResponseEntity<?> addReview(@RequestBody Review review) {
        return ResponseEntity.ok(reviewService.leaveReview(review));
    }

    // ✅ Get reviews by menu item ID
    @GetMapping("/menu/{menuItemId}")
    public ResponseEntity<?> getReviewsByMenuItem(@PathVariable Long menuItemId) {
        return menuItemRepository.findById(menuItemId)
                .map(menuItem -> ResponseEntity.ok(reviewService.getReviewsByMenuItem(menuItem)))
                .orElse(ResponseEntity.badRequest().body("Menu item not found"));
    }

    // ✅ Get reviews by user ID
    @GetMapping("/user/{userId}")
    public ResponseEntity<?> getReviewsByUser(@PathVariable Long userId) {
        return userRepository.findById(userId)
                .map(user -> ResponseEntity.ok(reviewService.getReviewsByUser(user)))
                .orElse(ResponseEntity.badRequest().body("User not found"));
    }
}
