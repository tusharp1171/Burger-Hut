package com.burgerhut.service.impl;


import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.burgerhut.entity.Cart;
import com.burgerhut.entity.CartItem;
import com.burgerhut.entity.User;
import com.burgerhut.repository.CartRepository;
import com.burgerhut.service.CartService;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class CartServiceImpl implements CartService {

	@Autowired
    private CartRepository cartRepository;

    @Override
    public Cart getCartByUser(User user) {
        return cartRepository.findByUser(user)
                .orElseGet(() -> {
                    Cart newCart = new Cart(user);
                    return cartRepository.save(newCart);
                });
    }

    @Override
    public Cart saveCart(Cart cart) {
        Optional<Cart> existingCartOpt = cartRepository.findByUser(cart.getUser());

        if (existingCartOpt.isPresent()) {
            Cart existingCart = existingCartOpt.get();
            
            // Remove old items if you're replacing them
            existingCart.getItems().clear();

            for (CartItem item : cart.getItems()) {
                item.setCart(existingCart);
                existingCart.getItems().add(item);
            }

            return cartRepository.save(existingCart); // Update existing cart
        } else {
            for (CartItem item : cart.getItems()) {
                item.setCart(cart);
            }

            return cartRepository.save(cart); // Save new cart
        }
    }


    @Override
    public void clearCart(Long cartId) {
        cartRepository.deleteById(cartId);
    }
}